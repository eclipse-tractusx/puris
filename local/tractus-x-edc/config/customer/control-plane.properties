# API
web.http.default.port=8180
web.http.default.path=/api

# MANAGEMENT (replaced data in 0.3.0)
web.http.management.port=8181
web.http.management.path=/api/v1/data

# CONTROL (replaced validation in 0.3.0)
web.http.control.port=8183
web.http.control.path=/api/controlplane/control

# PROTOCOL (replaced IDS in 0.3.0)
web.http.protocol.port=8184
# note: EDC in this version appends a "data" per IDS protocol
# https://eclipse-edc.github.io/docs/#/submodule/Connector/docs/developer/decision-records/2022-11-09-api-refactoring/renaming
web.http.protocol.path=/api/v1/ids

edc.ids.title=Customer EDC
edc.ids.description=Customer EDC Control Plane
edc.ids.id=urn:connector:customer-control-plane
edc.ids.security.profile=base
edc.ids.maintainer=http://customer-control-plane
edc.ids.curator=http://customer-control-plane
edc.ids.catalog.id=urn:catalog:default

# /api/v1/ids is the default HTTP IDS path
ids.webhook.address=http://customer-control-plane:8184

edc.hostname=customer-control-plane

# set via .env
#edc.api.auth.key=password

# OAuth / DAPS related configuration
edc.ids.endpoint=http://customer-control-plane:8184/api/v1/ids
## this may relate to version > 0.1.3
edc.oauth.endpoint.audience=http://customer-control-plane:8184/api/v1/ids/data
## starting from 0.4.0 with new protocol
#edc.oauth.endpoint.audience=http://consumer-control-plane:8184/api/v1/dsp
edc.oauth.token.url=http://omejdn-daps:4567/token
edc.oauth.client.id=customer
edc.oauth.provider.jwks.url=http://omejdn-daps:4567/jwks.json
edc.oauth.provider.audience=idsc:IDS_CONNECTORS_ALL
edc.oauth.public.key.alias=customer-cert
edc.oauth.private.key.alias=customer-key
edc.ids.validation.referringconnector=false

# HashiCorp vault related configuration
edc.vault.hashicorp.url=http://vault:8200
# set via docker-compose .env
#edc.vault.hashicorp.token=
edc.vault.hashicorp.health.check.enabled=false

# Data-Plane configuration
edc.transfer.proxy.endpoint=http://customer-data-plane:8285/api/public/
edc.transfer.proxy.token.signer.privatekey.alias=customer-key
edc.transfer.proxy.token.verifier.publickey.alias=customer-cert

# Data-Plane selector configuration
edc.dataplane.selector.edchttp.url=http://customer-data-plane:8299/api/dataplane/control
edc.dataplane.selector.edchttp.sourcetypes=HttpData
edc.dataplane.selector.edchttp.destinationtypes=HttpProxy
edc.dataplane.selector.edchttp.properties={"publicApiUrl" : "http://customer-data-plane:8285/api/public/"}

# backend receiver for static Endpoint Data References
edc.receiver.http.dynamic.endpoint=http://customer-backend:8081/catena/edrendpoint
edc.receiver.http.dynamic.auth-key=X-API-KEY
edc.receiver.http.dynamic.auth-code=test

# Postgresql related configuration
edc.datasource.asset.name=asset
edc.datasource.asset.url=jdbc:postgresql://postgres:5432/edc_customer_asset
# edc.datasource.asset.user and edc.datasource.asset.password are set via .env
edc.datasource.contractdefinition.name=contractdefinition
edc.datasource.contractdefinition.url=jdbc:postgresql://postgres:5432/edc_customer_contractdefinition

# edc.datasource.contractdefinition.user and edc.datasource.contractdefinition.password are set via .env
edc.datasource.contractnegotiation.name=contractnegotiation
edc.datasource.contractnegotiation.url=jdbc:postgresql://postgres:5432/edc_customer_contractnegotiation
# edc.datasource.contractnegotiation.user and edc.datasource.contractnegotiation.password are set via .env
edc.datasource.policy.name=policy
edc.datasource.policy.url=jdbc:postgresql://postgres:5432/edc_customer_policy
# edc.datasource.policy.user and edc.datasource.policy.password are set via .env
edc.datasource.transferprocess.name=transferprocess
edc.datasource.transferprocess.url=jdbc:postgresql://postgres:5432/edc_customer_transferprocess
# edc.datasource.transferprocess.user and edc.datasource.transferprocess.password are set via .env
# new in 0.4.x
#edc.datasource.edr.name=edr
#edc.datasource.edr.url=jdbc:postgresql://postgres:5432/edc_customer_edrs
# edc.datasource.edr.user and edc.datasource.edr.password are set via .env
#org.eclipse.tractusx.edc.postgresql.migration.edr.enabled=true

# Data Encryption edc-extensions/data-encryption
edc.data.encryption.keys.alias=customer-encryption-keys

#
# Copyright (c) 2023,2024 Volkswagen AG
# Copyright (c) 2023,2024 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST)
# Copyright (c) 2023,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

# GlOBAL -----------
global:
  domain:
    backend:
      ingress: &domain your-backend-host-address.com
# FRONTEND -----------
frontend:
  replicaCount: 1

  image:
    # -- Repository of the docker image
    repository: tractusx/app-puris-frontend
    # -- THe policy for the image pull process
    pullPolicy: Always
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""

  # -- List of used secrets
  imagePullSecrets: []
  # -- Possibility to override the name
  nameOverride: ""
  # -- Possibility to override the fullname
  fullnameOverride: "frontend"

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations added to a running pod
  podAnnotations: {}

  # -- Added security contexts for a pod
  podSecurityContext: {}
  # fsGroup: 2000

  # -- Security configurations
  securityContext:
    # -- Get more privileges than the parent process
    allowPrivilegeEscalation: false
    # -- Configures the non-root privileges for a run
    runAsNonRoot: true
    # -- Configures the user id for a run
    runAsUser: 101
    # -- Configures the group id of a user for a run
    runAsGroup: 3000

  service:
    # -- Type of the service
    type: ClusterIP
    # -- The port of the service
    port: 8080

  ingress:
    # -- Enable the Ingress
    enabled: false
    # -- Class name for the Ingress controller
    className: "nginx"
    # -- Annotations for the Ingress controller
    annotations: {}
    # -- Hosts for the Ingress controller
    hosts:
      - host: "your-frontend-host-address.com"
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- TLS certificates for the Ingress controller
    tls:
      - secretName: tls-secret
        hosts:
          - your-frontend-host-address.com

  resources:
    # -- Maximum resource limits of CPU und memory
    limits:
      cpu: 600m
      memory: 128Mi
    # -- Minimum requested resources for CPU und memory
    requests:
      cpu: 200m
      memory: 128Mi

  autoscaling:
    # -- Enable or disable the autoscaling of pods
    enabled: false
    # -- Number of minimum replica pods for autoscaling
    minReplicas: 1
    # -- Number of maximum replica pods for autoscaling
    maxReplicas: 100
    # -- Value of CPU usage in percentage for autoscaling decisions
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Constrains for the node selector
  nodeSelector: {}

  # -- Constrains for tolerations
  tolerations: []

  affinity:
    podAntiAffinity:
      # -- Rules for the scheduler to find a pod
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              # -- Matching Expressions as key and operators for the pod affinity
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: DoesNotExist
            # -- Topology key of the Kubernetes cluster
            topologyKey: kubernetes.io/hostname

  # -- Checks whether a pod is alive or not
  livenessProbe:
    # -- Number of failures (threshold) for a liveness probe
    failureThreshold: 3
    # -- Delay in seconds after which an initial liveness probe is checked
    initialDelaySeconds: 10
    # -- Wait time in seconds between liveness probes
    periodSeconds: 10
    # -- Number of trys until a pod is marked alive
    successThreshold: 1
    # -- Timeout in seconds of the liveness probe
    timeoutSeconds: 1
  # -- Checks if the pod is fully ready to operate
  readinessProbe:
    # -- Number of failures (threshold) for a readiness probe
    failureThreshold: 3
    # -- Delay in seconds after which an initial readiness probe is checked
    initialDelaySeconds: 10
    # -- Wait time in seconds between readiness probes
    periodSeconds: 10
    # -- Number of trys until a pod is marked ready
    successThreshold: 1
    # -- Timeout in seconds of the readiness probe
    timeoutSeconds: 1

  puris:
    # -- The name of the app displayed in the frontend
    appName: PURIS
    # -- The base URL for the backend base URL without further endpoints
    baseUrl: *domain
    # -- The endpoint for materials for the stock view
    endpointMaterials: stockView/materials
    # -- The endpoint for products for the stock view
    endpointProducts: stockView/products
    # -- The endpoint for material stocks for the stock view
    endpointMaterialStocks: stockView/material-stocks
    # -- The endpoint for product stocks for the stock view
    endpointProductStocks: stockView/product-stocks
    # -- The endpoint for the customers who buy a material identified via the own material number for the stock view
    endpointCustomer: stockView/customer?ownMaterialNumber=
    # -- The endpoint for the suppliers who buy a material identified via the own material number for the stock view
    endpointSupplier: stockView/supplier?ownMaterialNumber=
    # -- The endpoint for the partners' (supplier) material stocks that they potentially will deliver to me
    endpointReportedMaterialStocks: stockView/reported-material-stocks?ownMaterialNumber=
    # -- The endpoint for the partners' (customer) product stocks that they received from me
    endpointReportedProductStocks: stockView/reported-product-stocks?ownMaterialNumber=
    # -- The endpoint for triggering an update of your material stocks on your partners side
    endpointUpdateReportedMaterialStocks: stockView/update-reported-material-stocks?ownMaterialNumber=
    # -- The endpoint for triggering an update of your product stocks on your partners side
    endpointUpdateReportedProductStocks: stockView/update-reported-product-stocks?ownMaterialNumber=
    # -- The endpoint for the partners BPNS
    endpointPartnerOwnSites: partners/ownSites
    keycloak:
      # -- Disable the Keycloak integration.
      disabled: true
      # -- The URL to the IDP that should be used.
      url: "https://idp.com/auth"
      # -- Name of the Realm of the keycloak instance.
      realm: "Catena-X"
      # -- Name of the client which is used for the application.
      clientId: "appXYZ"
      # -- URL to use as keycloak redirect url.
      redirectUrlFrontend: "https://your-frontend-url.com"
    rateLimiting:
      # -- Bucket zone limit for rate limiting in nginx.
      limit: 10m
      # -- Burst rate limiting for nginx.
      burst: 30
      # -- Allowed rates per second for nginx rate limiting.
      rate: 10r/s

  # -- Extra environment variables that will be passed onto the frontend deployment pods
  env: {}
  #  ENV_NAME: value


# BACKEND -----------
backend:
  # -- Number of replicas of the Kubernetes deployment
  replicaCount: 1

  image:
    # -- Repository of the docker image
    repository: tractusx/app-puris-backend
    # -- THe policy for the image pull process
    pullPolicy: Always
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""

  # -- List of used secrets
  imagePullSecrets: []
  # -- Possibility to override the name
  nameOverride: ""
  # -- Possibility to override the fullname
  fullnameOverride: backend

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations added to a running pod
  podAnnotations: {}

  # -- Added security contexts for a pod
  podSecurityContext: {}
  # fsGroup: 2000

  # -- Security configurations
  securityContext:
    # -- Get more privileges than the parent process
    allowPrivilegeEscalation: false
    # -- Configures the non-root privileges for a run
    runAsNonRoot: true
    # -- Configures the user id for a run
    runAsUser: 8877
    # -- Configures the group id of a user for a run
    runAsGroup: 3000

  service:
    # -- Type of the service
    type: ClusterIP
    # -- The port of the service
    port: 8081

  resources:
    # -- Maximum resource limits of CPU und memory
    limits:
      cpu: 3000m
      memory: 2048Mi
    # -- Minimum requested resources for CPU und memory
    requests:
      cpu: 1000m
      memory: 2048Mi

  autoscaling:
    # -- Enable or disable the autoscaling of pods
    enabled: false

  ingress:
    # -- Enable the Ingress
    enabled: false
    # -- Annotations for the Ingress controller
    annotations:
      # -- Kubernetes Ingress class annotation for direct bindings
      kubernetes.io/ingress.class: nginx
      # -- Force redirects from HTTP to HTTPS
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # -- Pass SSL traffic to the backend ports
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      # -- The backend protocol type (e.g. HTTP)
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # -- Hosts for the Ingress controller
    hosts:
      - host: *domain
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- TLS certificates for the Ingress controller
    tls:
      - secretName: tls-secret
        hosts:
          - *domain

  # -- Constrains for the node selector
  nodeSelector: {}

  # -- Constrains for tolerations
  tolerations: []

  affinity:
    podAntiAffinity:
      # -- Rules for the scheduler to find a pod
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              # -- Matching Expressions as key and operators for the pod affinity
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: DoesNotExist
            # -- Topology key of the Kubernetes cluster
            topologyKey: kubernetes.io/hostname

  # -- Checks whether a pod is alive or not
  livenessProbe:
    # -- Number of failures (threshold) for a liveness probe
    failureThreshold: 3
    # -- Delay in seconds after which an initial liveness probe is checked
    initialDelaySeconds: 120
    # -- Wait time in seconds between liveness probes
    periodSeconds: 25
    # -- Number of trys until a pod is marked alive
    successThreshold: 1
    # -- Timeout in seconds of the liveness probe
    timeoutSeconds: 1
  # -- Checks if the pod is fully ready to operate
  readinessProbe:
    # -- Number of failures (threshold) for a readiness probe
    failureThreshold: 3
    # -- Delay in seconds after which an initial readiness probe is checked
    initialDelaySeconds: 120
    # -- Wait time in seconds between readiness probes
    periodSeconds: 25
    # -- Number of trys until a pod is marked ready
    successThreshold: 1
    # -- Timeout in seconds of the readiness probe
    timeoutSeconds: 1

  puris:
    # -- Base url of the PURIS backend
    baseurl: *domain
    # -- Secret for backend passwords. For more information look into 'backend-secrets.yaml' file.
    existingSecret: "secret-backend-puris"
    api:
      # -- The API key of the PURIS application
      key: "test"
      # -- The root directory of the API
      rootDir: /catena
    datasource:
      # -- Driver class name of the database
      driverClassName: org.postgresql.Driver
      # -- URL of the database. Ignored if postgres.enabled is true.
      url: jdbc:postgresql://postgresql-name:5432/puris-database
      # -- Username of the database. Ignored if postgres.enabled is true.
      username: db-user
      # -- Password for the database user. Ignored if postgres.enabled is true.
      password:
    edc:
      controlplane:
        host: "172.17.0.2"
        management:
          # -- Url to the EDC controlplane management of the edc
          url: "https:/your-edc-address:8181/management"
        protocol:
          # -- Url to the EDC controlplane protocol API of the edc
          url: "https://your-edc-address:8184/api/v1/dsp"
        # -- Key for the EDC control plane
        key: "password"
      dataplane:
        public:
          # -- Url of one of your data plane's public api
          url: "https://your-data-plane:8285/api/public/"
    own:
      # -- Own BPNL of the EDC
      bpnl: BPNL4444444444XX
      # -- Own BPNA of the EDC
      bpna: BPNA4444444444ZZ
      # -- Own BPNS of the EDC
      bpns: BPNS4444444444XX
      # -- Own country
      country: "Germany"
      site:
        # -- Own site name
        name: "YOUR-SITE-NAME"
      # -- Own street and number
      streetnumber: "Musterstraße 110A"
      # -- Own zipcode and city
      zipcodeandcity: "12345 Musterhausen"
      # -- Own name (self-description)
      name: "YOUR-COMPANY-NAME"
    demonstrator:
      # -- Current role of the PURIS demonstrator. Default value should be empty.
      # Can be set to "customer" or "supplier" to enable demonstration setup
      role:
    jpa:
      hibernate:
        # -- Initialises SQL database with Hibernate property "create" to allow Hibernate to first drop all tables and then create new ones
        ddl-auto: create
      properties:
        hibernate:
          # -- Enables "Lazy load no trans" property to fetch of each lazy entity to open a temporary session and run inside a separate transaction
          enable_lazy_load_no_trans: true
    itemstocksubmodel:
      # -- Asset ID for ItemStockSubmodel API
      apiassetid: itemstocksubmodel-api-asset
    frameworkagreement:
      # -- Flag to determine whether to use a framework agreement in puris
      use: false
      # -- The name of the framework agreement
      credential: FrameworkAgreement.traceability
    edr:
      # -- Number of minutes before received authentication data of a consumer pull is removed from memory
      deletiontimer: 2
    dtr:
      # --Endpoint for DTR
      url: http://localhost:4243
    # -- Flag that decides whether the auto-generation feature of the puris backend is enabled.
    # Since all Material entities are required to have a CatenaX-Id, you must enter any pre-existing CatenaX-Id
    # via the materials-API of the backend, when you are inserting a new Material entity to the backend's
    # database.
    # If a CatenaX-Id was not assigned to your Material so far, then this feature can auto-generate one randomly.
    # In a real-world-scenario, you must then use this randomly generated CatenaX-Id for the lifetime of that
    # Material entity.
    generatematerialcatenaxid: true

  # -- Extra environment variables that will be passed onto the backend deployment pods
  env: {}
  #  ENV_NAME: value

postgresql:
  # -- Enable postgres by default, set to false to use existing postgres. Make sure to set
  # backend.puris.jpa.hibernate.ddl-auto accordingly (by default database is created using hibernate ddl from
  # backend).
  enabled: true
  # -- Possibility to override the fullname
  fullnameOverride: "backend-postgresql"
  service:
    ports:
      # -- Port of postgres database.
      postgresql: 5432
  auth:
    # -- Name of the database.
    database: "postgres"
    # -- Secret containing the password. For more information look into 'backend-secrets-postgres.yaml' file.
    existingSecret: "secret-postgres-init"
    # -- Username for the custom database user.
    username: "puris"
    # -- Password for the custom database user. Secret-key 'password'
    password: ""
    # -- Password for the database. Secret-key 'postgres-password'.
    passwordPostgres: ""

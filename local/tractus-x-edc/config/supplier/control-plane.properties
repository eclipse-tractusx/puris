# API
web.http.port=9180
web.http.path=/api
# MANAGEMENT (replaced data in 0.3.0)
web.http.management.port=9181
web.http.management.path=/management
web.http.management.auth.key=${EDC_API_PW}
# CONTROL (replaced validation in 0.3.0)
web.http.control.port=9183
web.http.control.path=/api/controlplane/control
# PROTOCOL (replaced IDS in 0.3.0)
web.http.protocol.port=9184
web.http.protocol.path=/api/v1/dsp

web.http.catalog.port=9196
web.http.catalog.path=/catalog
web.http.catalog.auth.type=tokenbased
web.http.catalog.auth.key=${EDC_API_PW}

edc.catalog.cache.execution.enabled=false
edc.dcp.v08.forced=true

# TX EDC 0.9.0, Upstream 0.11.0, enable with https://github.com/eclipse-tractusx/puris/issues/783
edc.policy.validation.enabled=true

#edc.participant.id=BPNL1234567890ZZ
edc.participant.id=did:web:mock-util-service/supplier
tractusx.edc.participant.bpn=BPNL1234567890ZZ
edc.component.id=supplier-controlplane-component-id
edc.dsp.callback.address=http://supplier-control-plane:9184/api/v1/dsp
edc.hostname=supplier-control-plane
# IATP
tx.edc.iam.iatp.bdrs.server.url=http://bdrs:8582/api/directory
tx.iam.iatp.bdrs.validity=600
# iatp / dim
edc.iam.issuer.id=did:web:mock-util-service/supplier
# locally we don't actually care, because our dim service will accept all
edc.iam.sts.oauth.token.url=http://keycloak:8080/realms/miw_test/protocol/openid-connect/token
edc.iam.sts.oauth.client.id=${SUPPLIER_OAUTH_CLIENT_ID}
edc.iam.sts.oauth.client.secret.alias=${SUPPLIER_OAUTH_SECRET_ALIAS}
tx.edc.iam.sts.dim.url=http://mock-util-service:80/sts
# configure one Credential service for all (else pulled from did, nevertheless done)
tx.edc.iam.iatp.credentialservice.url=http://mock-util-service:80
# don't use https during did resolving
edc.iam.did.web.use.https=false
# old MIW config (<0.7.0), can be ignored till MIW is back
#tx.ssi.oauth.token.url=http://keycloak:8080/realms/miw_test/protocol/openid-connect/token
#tx.ssi.oauth.client.id=${SUPPLIER_OAUTH_CLIENT_ID}
#tx.ssi.oauth.client.secret.alias=${SUPPLIER_OAUTH_SECRET_ALIAS}
#tx.ssi.miw.url=http://miw
#tx.ssi.miw.authority.id=BPNL000000000000
#tx.ssi.endpoint.audience=http://supplier-control-plane:9184/api/v1/dsp
# HashiCorp vault related configuration
edc.vault.hashicorp.url=http://vault:8200
edc.vault.hashicorp.health.check.enabled=false
edc.vault.hashicorp.token=${VAULT_DEV_ROOT_TOKEN_ID}
# Data-Plane configuration
edc.transfer.proxy.endpoint=http://supplier-data-plane:9285/api/public/
edc.transfer.proxy.token.signer.privatekey.alias=${SUPPLIER_PRIVATE_KEY_ALIAS}
edc.transfer.proxy.token.verifier.publickey.alias=${SUPPLIER_PUBLIC_KEY_ALIAS}

edc.dataplane.api.public.baseurl=http://supplier-data-plane:9285/api/public/

# Postgresql related configuration
edc.datasource.default.url=jdbc:postgresql://postgres-all:5432/edc_supplier
edc.datasource.default.user=${PG_USER}
edc.datasource.default.password=${PG_PW}

# Data Encryption
edc.data.encryption.keys.alias=${SUPPLIER_ENCRYPTION_KEYS_ALIAS}

# The following property was moved to the docker-compose.yaml file's "environment" due to some technical docker compose issues:
# https://github.com/docker/compose/issues/12123#issuecomment-2529442716
#edc.iam.trusted-issuer.portal.id=did:web:mock-util-service/trusted-issuer

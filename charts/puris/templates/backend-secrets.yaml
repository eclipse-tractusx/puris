{{- /*
* Copyright (c) 2024 Volkswagen AG
* Copyright (c) 2024 Contributors to the Eclipse Foundation
*
* See the NOTICE file(s) distributed with this work for additional
* information regarding copyright ownership.
*
* This program and the accompanying materials are made available under the
* terms of the Apache License, Version 2.0 which is available at
* https://www.apache.org/licenses/LICENSE-2.0.
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
* License for the specific language governing permissions and limitations
* under the License.
*
* SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.backend.puris.existingSecret }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "puris.backend.labels" . | nindent 4 }}
type: Opaque
# use lookup function to check if secret exists
{{- $secret := (lookup "v1" "Secret" .Release.Namespace .Values.backend.puris.existingSecret) }}
{{ if $secret -}}
data:
  # if secret exists, use value provided from values file (to cover update scenario) or existing value from secret
  # use data map instead of stringData to prevent base64 encoding of already base64-encoded existing value from secret
  # use index function for secret keys with hyphen otherwise '$secret.data.secretKey' works too
  puris-api-key: {{ (.Values.backend.puris.api.key | b64enc) | default (index $secret.data "puris-api-key") | quote }}
  puris-datasource-password: {{ (.Values.backend.puris.datasource.password | b64enc) | default (index $secret.data "puris-datasource-password") | quote }}
  puris-edc-controlplane-key: {{ (.Values.backend.puris.edc.controlplane.key | b64enc) | default (index $secret.data "puris-edc-controlplane-key") | quote }}
  puris-dtr-idp-puris-client-secret: {{ (.Values.backend.puris.dtr.idp.clients.puris.secret | b64enc) | default (index $secret.data "puris-dtr-idp-puris-client-secret") | quote }}
  puris-erpadapter-authsecret: {{ (.Values.backend.puris.erpadapter.authsecret | b64enc) | default (index $secret.data "puris-erpadapter-authsecret") | quote }}
{{ else -}}
stringData:
  # if secret doesn't exist, use provided value from values file or generate a random one
  puris-api-key: {{ .Values.backend.puris.api.key | default ( randAlphaNum 32 ) | quote }}
  puris-datasource-password: {{ .Values.backend.puris.datasource.password | default ( randAlphaNum 32 ) | quote }}
  puris-edc-controlplane-key: {{ .Values.backend.puris.edc.controlplane.key | default ( randAlphaNum 32 ) | quote }}
  # don't generate a random one as this is set in identity provider
  puris-dtr-idp-puris-client-secret: {{ .Values.backend.puris.dtr.idp.clients.puris.secret | quote }}
  puris-erpadapter-authsecret: {{ .Values.backend.puris.erpadapter.authsecret | default ( randAlphaNum 32 ) | quote }}
{{ end }}

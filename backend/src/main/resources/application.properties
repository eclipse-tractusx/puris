# Server Config
server.port=${SERVER_PORT:8081}

# Requires a trailing "/"
puris.baseurl=${PURIS_BASEURL:http://customer-backend:8081/}

puris.demonstrator.role=${PURIS_DEMONSTRATOR_ROLE:customer}
puris.itemstocksubmodel.apiassetid=${PURIS_ITEMSTOCKSUBMODEL_APIASSETID:itemstocksubmodel-api-asset}
puris.productionsubmodel.apiassetid=${PURIS_PRODUCTIONSUBMODEL_APIASSETID:productionsubmodel-api-asset}
puris.demandsubmodel.apiassetid=${PURIS_DEMANDSUBMODEL_APIASSETID:demandsubmodel-api-asset}
puris.deliverysubmodel.apiassetid=${PURIS_DELIVERYSUBMODEL_APIASSETID:deliverysubmodel-api-asset}
puris.daysofsupplysubmodel.apiassetid=${PURIS_DAYSOFSUPPLYSUBMODEL_APIASSETID:daysofsupplysubmodel-api-asset}
puris.notification.apiassetid=${PURIS_NOTIFICATION_APIASSETID:notification-api-asset}
puris.frameworkagreement.credential=${PURIS_FRAMEWORKAGREEMENT_CREDENTIAL:Puris}
puris.frameworkagreement.version=${PURIS_FRAMEWORKAGREEMENT_VERSION:1.0}
puris.purpose.name=${PURIS_PURPOSE_NAME:cx.puris.base}
puris.purpose.version=${PURIS_PURPOSE_VERSION:1}
puris.api.key=${PURIS_API_KEY:test}
puris.dtr.url=${PURIS_DTR_URL:http://localhost:4243/api/v3}
puris.dtr.idp.enabled=${PURIS_DTR_IDP_ENABLED:false}
puris.dtr.idp.tokenurl=${PURIS_DTR_IDP_TOKEN_URL:http://keycloak:8080/realms/Customer/protocol/openid-connect/token}
puris.dtr.idp.edc-client.id=${PURIS_DTR_IDP_EDC-CLIENT_ID:FOSS-DTR-CLIENT}
puris.dtr.idp.edc-client.secret.alias=${PURIS_DTR_IDP_EDC-CLIENT_SECRET_ALIAS}
puris.dtr.idp.puris-client.id=${PURIS_DTR_IDP_PURIS-CLIENT_ID:FOSS-DTR-CLIENT}
puris.dtr.idp.puris-client.secret=${PURIS_DTR_IDP_PURIS-CLIENT_SECRET}
puris.erpadapter.enabled=${PURIS_ERPADAPTER_ENABLED:false}
puris.erpadapter.url=${PURIS_ERPADAPTER_URL:http://host.docker.internal:5555/}
puris.erpadapter.authkey=${PURIS_ERPADAPTER_AUTHKEY:x-api-key}
puris.erpadapter.authsecret=${PURIS_ERPADAPTER_AUTHSECRET:erp-password}

# Interval between two requests to the erp adapter for the same issue (minutes)
puris.erpadapter.refreshinterval=${PURIS_ERPADAPTER_REFRESHINTERVAL:1}

# Period since last received partner request after which no more new update requests to the
# erp adapter will be sent (days)
puris.erpadapter.timelimit=${PURIS_ERPADAPTER_TIMELIMIT:7}


# Flag that decides whether the auto-generation feature of the puris backend is enabled.
# Since all Material entities are required to have a CatenaX-Id, you must enter any pre-existing CatenaX-Id
# via the materials-API of the backend, when you are inserting a new Material entity to the backend's
# database.
# If a CatenaX-Id was not assigned to your Material so far, then this feature can auto-generate one randomly.
# In a real-world-scenario, you must then use this randomly generated CatenaX-Id for the lifetime of that
# Material entity.
puris.generatematerialcatenaxid=${PURIS_GENERATEMATERIALCATENAXID:true}
# DB Configuration
spring.datasource.driver-class-name=${DATASOURCE_DRIVERCLASSNAME:org.postgresql.Driver}
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/puris-db}
spring.datasource.username=${DATASOURCE_USERNAME:puris-user}
spring.datasource.password=${DATASOURCE_PASSWORD:}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
# API Root
server.servlet.context-path=${API_ROOTDIR:/catena}
# EDC Config
edc.controlplane.key=${EDC_CONTROLPLANE_KEY:password}
edc.controlplane.management.url=${EDC_CONTROLPLANE_MANAGEMENT_URL:http://customer-control-plane:8181/management}
edc.controlplane.protocol.url=${EDC_CONTROLPLANE_PROTOCOL_URL:http://customer-control-plane:8184/api/v1/dsp}
edc.dataplane.public.url=${EDC_DATAPLANE_PUBLIC_URL:http://customer-data-plane:8285/api/public/}
# Jackson (JSON)
#spring.jackson.default-property-inclusion=non_empty
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Own BPNL
own.bpnl=${OWN_BPNL:BPNL4444444444XX}
# Own name (self-description)
own.name=${OWN_NAME:Control Unit Creator Inc.}
# Own BPNS (optional: if this is set, then set own.site.name as well)
own.bpns=${OWN_BPNS:BPNS4444444444XX}
# Name of Site (see above)
own.site.name=${OWN_SITE:Control Unit Creator Production Site}
# If a BPNS is set, then this BPNA will be attached to it.
# Otherwise, it will be attached immediately to the BPNL (see above)
own.bpna=${OWN_BPNA:BPNA4444444444AA}
own.streetandnumber=${OWN_STREETANDNUMBER:13th Street 47}
own.zipcodeandcity=${OWN_ZIPCODEANDCITY:10011 New York}
own.country=${OWN_COUNTRY:USA}
# only enable health endpoint from actuator by default
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
server.ssl.enabled=false
#server.port=8443
#server.ssl.bundle=server
#spring.ssl.bundle.jks.server.key.alias=application
#spring.ssl.bundle.jks.server.keystore.location=file:ssl-certificates/application.p12
#spring.ssl.bundle.jks.server.keystore.password=testtest
#spring.ssl.bundle.jks.server.keystore.type=PKCS12
# run with:
# ./mvnw spring-boot:run -Dspring-boot.run.arguments=--spring.config.location="./src/main/resources/application.properties"
